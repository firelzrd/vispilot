#!/usr/bin/python3
import sys
import cv2
import numpy as np
from matplotlib import pyplot as plt
from optparse import OptionParser

parser = OptionParser()
parser.add_option("-s", "--strictness", dest="strictness", default="0.9",
                  help="detection strictness (0.0 - 1.0)")
parser.add_option("-o", "--output", dest="output",
                  help="File to output the detection result to")

(options, args) = parser.parse_args()
if len(args) != 2:
	print("Expected arguments: SubimgFile ImgFile", file = sys.stderr)
	quit()

subimg = cv2.imread(args[0], cv2.IMREAD_COLOR)
img = cv2.imread(args[1], cv2.IMREAD_COLOR)
d, w, h = subimg.shape[::-1]

result = cv2.matchTemplate(img, subimg, cv2.TM_CCOEFF_NORMED)
#minVal, maxVal, minLoc, maxLoc = cv2.minMaxLoc(result)
#print(f"max value: {maxVal}, position: {maxLoc}")
#print(f"min value: {minVal}, position: {minLoc}")
threshold = float(options.strictness)
loc = np.where(result >= threshold)
for pt in zip(*loc[::-1]):
	if options.output:
		cv2.rectangle(img, pt, (pt[0] + w - 1, pt[1] + h - 1), (0,0,255), 1)
	print(f"{pt[0]},{pt[1]}")

if options.output:
	cv2.imwrite(options.output,img)

